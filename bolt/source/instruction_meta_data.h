#ifndef NES_INSTRUCTION_META_DATA_H_
#define NES_INSTRUCTION_META_DATA_H_

#pragma once

#include "addressing_mode.h"

#include <cstdint>

#define NES_INSTRUCTION_ADC 0b01100001
#define NES_INSTRUCTION_AND 0b00100001
#define NES_INSTRUCTION_ASL 0b00000010
#define NES_INSTRUCTION_BCC 0b10010000
#define NES_INSTRUCTION_BCS 0b10110000
#define NES_INSTRUCTION_BEQ 0b11110000
#define NES_INSTRUCTION_BIT 0b00100000
#define NES_INSTRUCTION_BMI 0b00110000
#define NES_INSTRUCTION_BNE 0b11010000
#define NES_INSTRUCTION_BRK 0b00000000
#define NES_INSTRUCTION_BVC 0b01010000
#define NES_INSTRUCTION_BVS 0b01110000
#define NES_INSTRUCTION_CLC 0b00011000
#define NES_INSTRUCTION_CLI 0b01011000
#define NES_INSTRUCTION_CLV 0b10111000
#define NES_INSTRUCTION_CMP 0b11000001
#define NES_INSTRUCTION_CPX 0b11000000
#define NES_INSTRUCTION_CPY 0b11100000
#define NES_INSTRUCTION_DEC 0b11000010
#define NES_INSTRUCTION_DEX 0b11001010
#define NES_INSTRUCTION_DEY 0b10001000
#define NES_INSTRUCTION_EOR 0b01000001
#define NES_INSTRUCTION_INC 0b11100010
#define NES_INSTRUCTION_INX 0b11101000
#define NES_INSTRUCTION_INY 0b11001000
#define NES_INSTRUCTION_JMP 0b01000000
#define NES_INSTRUCTION_JSR 0b00100000
#define NES_INSTRUCTION_LDA 0b10100001
#define NES_INSTRUCTION_LDX 0b10100010
#define NES_INSTRUCTION_LDY 0b10100000
#define NES_INSTRUCTION_LSR 0b01000010
#define NES_INSTRUCTION_NOP 0b11101010
#define NES_INSTRUCTION_ORA 0b00000001
#define NES_INSTRUCTION_PHA 0b01001000
#define NES_INSTRUCTION_PHP 0b00001000
#define NES_INSTRUCTION_PLA 0b01101000
#define NES_INSTRUCTION_PLP 0b00101000
#define NES_INSTRUCTION_ROL 0b00100010
#define NES_INSTRUCTION_ROR 0b01100010
#define NES_INSTRUCTION_RTI 0b01000000
#define NES_INSTRUCTION_RTS 0b01100000
#define NES_INSTRUCTION_SBC 0b11100001
#define NES_INSTRUCTION_SEC 0b00101000
#define NES_INSTRUCTION_SEI 0b01111000
#define NES_INSTRUCTION_STA 0b10000001
#define NES_INSTRUCTION_STX 0b10000010
#define NES_INSTRUCTION_STY 0b10000000
#define NES_INSTRUCTION_TAY 0b10101010
#define NES_INSTRUCTION_TSX 0b10101000
#define NES_INSTRUCTION_TXS 0b10001010
#define NES_INSTRUCTION_TYA 0b10011010

#define NES_BASE_INSTRUCTION_MASK 0b11100011

#define NES_DISCARD_BASE_INSTRUCTION 0xff

#define NES_INSTRUCTION_META_DATA(base_instruction, addressing_mode, bytes, cycles) \
template<uint8_t opcode>                                                            \
struct nes_instruction_meta_data<opcode, base_instruction, addressing_mode> {       \
    static constexpr size_t get_bytes() { return bytes; }                           \
    static constexpr size_t get_cycles() { return cycles; }                         \
};

namespace bolt {
    template<uint8_t opcode, 
        uint8_t base_instruction = opcode & NES_BASE_INSTRUCTION_MASK, 
        uint8_t addressing_mode_mask = opcode & NES_ADDRESSING_MODE_MASK>
    struct nes_instruction_meta_data;

    NES_INSTRUCTION_META_DATA(NES_INSTRUCTION_AND, NES_ADDRESSING_MODE_IMMEDIATE, 2, 2)
    NES_INSTRUCTION_META_DATA(NES_INSTRUCTION_AND, NES_ADDRESSING_MODE_ZERO_PAGE, 2, 3)
    NES_INSTRUCTION_META_DATA(NES_INSTRUCTION_AND, NES_ADDRESSING_MODE_ZERO_PAGE_XY, 2, 4)
    NES_INSTRUCTION_META_DATA(NES_INSTRUCTION_AND, NES_ADDRESSING_MODE_ABSOLUTE, 3, 4)
    NES_INSTRUCTION_META_DATA(NES_INSTRUCTION_AND, NES_ADDRESSING_MODE_ABSOLUTE_X, 3, 4)
    NES_INSTRUCTION_META_DATA(NES_INSTRUCTION_AND, NES_ADDRESSING_MODE_ABSOLUTE_Y, 3, 4)
    NES_INSTRUCTION_META_DATA(NES_INSTRUCTION_AND, NES_ADDRESSING_MODE_INDEXED_INDIRECT, 2, 6)
    NES_INSTRUCTION_META_DATA(NES_INSTRUCTION_AND, NES_ADDRESSING_MODE_INDIRECT_INDEXED, 2, 5)

    //NES_INSTRUCTION_META_DATA(NES_INSTRUCTION_ASL, NES, 1, 2)

}

#endif